.input,
.placeholder,
.selected {
  cursor: text;
  background: var(--color-white);
  outline: none;
  border-radius: 0;
  font-size: 16px;
  padding: 8px 0 7px;
  border: 0px;
  flex-grow: 1;
  outline: 0;
  cursor: pointer;
  font-family: inherit;
}

.selectSearchInput input {
  background: transparent;
}

.nativeSelect {
  width: 100%;
  position: absolute;
  height: 100%;
  opacity: 0;
}

.placeholder {
  color: var(--color-black-30);
}

.selected {
  color: var(--color-black-90);
}

@keyframes spin {
  to {
    transform: translate(-50%, -50%) rotate(1turn);
  }
}

.disabled {
  opacity: 0.5;
  pointer-events: none;
}

.wrapper {
  position: relative;
  display: flex;
  flex-direction: row;
  align-items: center;
  border-bottom: 1px solid var(--color-black-40);
}

.required {
  color: var(--color-red-dark);
  padding-left: 5px;
}

.wrapper input ~ * {
  margin-left: 10px;
}

.loading {
  position: relative;
  width: 25px;
  height: 25px;
}

.label {
  font-weight: 700;
  font-size: var(--input-label-font-size);
}

.option {
  padding: 20px 0px;
  justify-content: flex-start;
  border-bottom: 1px solid var(--color-black-30);
  font-size: 16px;
}

.option:hover {
  background-color: #eee;
}

.label,
.option {
  color: var(--color-black-90);
}

.loading::before {
  position: absolute;
  content: '';
  top: 50%;
  left: 50%;
  width: 10px;
  height: 10px;
  background: 0 0;
  border: 2px solid var(--color-black-30);
  border-radius: 50%;
  -webkit-clip-path: inset(0 0 50% 0);
  clip-path: inset(0 0 50% 0);
  transform: translate(-50%, -50%) rotate(0);
  -webkit-animation: spin 0.6s linear infinite;
  animation: spin 0.6s linear infinite;
}

.error .wrapper {
  border-bottom-color: var(--color-red-dark);
}
.error input {
  color: var(--color-red-dark);
}

.errorLabel {
  color: var(--color-red-dark);
  font-size: 12px;
  padding-top: 5px;
}
